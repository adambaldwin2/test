#!/usr/bin/env python

import core.controllers.outputManager as om
import getopt,sys, os

om.out.setOutputPlugins( ['console'] )

def usage():
    om.out.information('w3af - Web Application Attack and Audit Framework')
    om.out.information('')
    om.out.information('Options:')
    om.out.information('    -h              Print this help message.')
    om.out.information('    -s <file>       Execute a script file.')
    om.out.information('    -g              Run GTK user interface.')
    om.out.information('    -i <dir>        Directory where MSF is installed (only used to install the virtual daemon).')
    om.out.information('    -p <profile>    Run with the selected profile')
    om.out.information('')
    om.out.information('http://w3af.sourceforge.net/')

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "p:i:hs:wget", [] )
    except getopt.GetoptError:
        # print help information and exit:
        usage()
        sys.exit(2)
    scriptFile = None
    web = False
    gtkui = False
    profile = None
    for o, a in opts:
        if o in ( "-e"  ):
            # easter egg
            import base64
            om.out.information( base64.b64decode( 'R3JhY2lhcyBFdWdlIHBvciBiYW5jYXJtZSB0YW50YXMgaG9yYXMgZGUgZGVzYXJyb2xsbywgdGUgYW1vIGdvcmRhIQ==' ) )
        if o in ( "-t"  ):
            # Test all scripts that have an assert call
            from core.controllers.misc.w3afTest import w3afTest
            w3afTest()
            sys.exit(0)
        if o == "-s":
            scriptFile = a
        if o == "-i":
            # Install the virtual daemon module in the MSF directory
            from core.controllers.vdaemon.install import installVdaemon
            installVdaemon( a )
        if o == '-g':
            # Go with GTK
            gtkui = True
        if o in ('-p', '--profile'):
            # selected profile
            profile = a
        if o == '-w':
            # Go web
            web = True
        if o == "-h":
            usage()
            sys.exit()
    
    if web:
        # go web!
        from core.ui.webUi.webUi import webUi
        om.out.setOutputPlugins( ['console', 'webOutput'] )
        console = webUi()
        console.sh()
    elif gtkui:
        # go with GTK, but first check about DISPLAY environment variable
        display = os.getenv("DISPLAY").strip()
        if not display:
            om.out.error("The DISPLAY environment variable is not set! You can not use any graphical program without it...")
            sys.exit(-1)
        import core.ui.gtkUi.main
        core.ui.gtkUi.main.main(profile)
    else:
        # console
        from core.ui.consoleUi.consoleUi import consoleUi
        
        if scriptFile != None:
            try:
                fd = open( scriptFile )
            except:
                om.out.error('Failed to open file : ' + scriptFile )
                sys.exit(2)
            else:
                commandsToRun = []
                for line in fd:
                    line = line.strip()
                    if line != '' and line[0] != '#':   # if not a comment..
                        commandsToRun.append( line )
                fd.close()
                console = consoleUi( scriptFile=scriptFile, commands=commandsToRun)
        else:
            console = consoleUi()
        console.sh()

if __name__ == "__main__":
    main()

